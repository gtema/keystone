apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: keystone-py
  name: keystone
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: keystone-py
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keystone-py
    spec:
      initContainers:
        - name: db-waiter
          image: busybox:1.36.1
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'echo "Waiting for PostgreSQL to be available..."; while ! nc -z -w 1 keystone-db-rw 5432; do echo "Still waiting for postgres-service..."; sleep 2; done; echo "PostgreSQL is available! Starting application."']
        - env:
            - name: OS_DATABASE__CONNECTION
              valueFrom:
                secretKeyRef:
                  key: fqdn-uri
                  name: keystone-db-app
          image: py-keystone
          name: keystone-db
          command: [keystone-manage, db_sync]
          volumeMounts:
            - mountPath: /etc/keystone/keystone.conf
              name: config
              subPath: keystone.conf
        - env:
            - name: OS_DATABASE__CONNECTION
              valueFrom:
                secretKeyRef:
                  key: fqdn-uri
                  name: keystone-db-app
          image: py-keystone
          name: keystone-bootstrap
          command: [keystone-manage, "bootstrap", "--bootstrap-username", "admin", "--bootstrap-password", "password", "--bootstrap-public-url", "http://keystone-py:5000", "--bootstrap-internal-url", "http://keystone:5000"]
          volumeMounts:
            - mountPath: /etc/keystone/keystone.conf
              name: config
              subPath: keystone.conf
            - mountPath: /etc/keystone/fernet-keys
              name: fernet
      containers:
        - env:
            - name: OS_DATABASE__CONNECTION
              valueFrom:
                secretKeyRef:
                  key: fqdn-uri
                  name: keystone-db-app
          command: ["uwsgi", "--http-socket", ":5000", "-w", "keystone.server.wsgi:initialize_public_application()"]
          image: py-keystone
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthcheck
              port: 5000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: keystone
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthcheck
              port: 5000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 600
            httpGet:
              path: /healthcheck
              port: 5000
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /etc/keystone/fernet-keys
              name: fernet
            - mountPath: /etc/keystone/keystone.conf
              name: config
              subPath: keystone.conf
      volumes:
        - name: config
          configMap:
            name: keystone
        - name: fernet
          secret:
            defaultMode: 420
            optional: false
            secretName: fernet-keys
            items:
              - key: "k0"
                path: "0"
              - key: "k1"
                path: "1"
