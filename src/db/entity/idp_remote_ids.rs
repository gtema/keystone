//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "idp_remote_ids")]
pub struct Model {
    pub idp_id: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub remote_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::identity_provider::Entity",
        from = "Column::IdpId",
        to = "super::identity_provider::Column::Id",
        on_update = "Restrict",
        on_delete = "Cascade"
    )]
    IdentityProvider,
}

impl Related<super::identity_provider::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::IdentityProvider.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
