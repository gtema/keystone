//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "access_token")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub access_secret: String,
    pub authorizing_user_id: String,
    pub project_id: String,
    #[sea_orm(column_type = "Text")]
    pub role_ids: String,
    pub consumer_id: String,
    pub expires_at: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::consumer::Entity",
        from = "Column::ConsumerId",
        to = "super::consumer::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Consumer,
}

impl Related<super::consumer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Consumer.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
